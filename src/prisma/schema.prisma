// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Information {
  content String @unique
}

model User {
  id       Int           @id @default(autoincrement())
  name     String
  email    String        @unique
  password String
  role     String        @default("user")
  avatar   String?
  profile  Profile?
  groups   User_Groups[]
  posts    Post[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id           Int     @id @default(autoincrement())
  user_id      Int     @unique
  user         User    @relation(fields: [user_id], references: [id])
  address      String?
  phone        String?
  mobile_phone String?
  bio          String?
  memo         String?
}

model Group {
  id    Int           @id @default(autoincrement())
  name  String
  users User_Groups[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User_Groups {
  user_id  Int
  user     User  @relation(fields: [user_id], references: [id])
  group_id Int
  group    Group @relation(fields: [group_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([user_id, group_id])
}

model Post {
  id        Int         @id @default(autoincrement())
  user_id   Int
  user      User        @relation(fields: [user_id], references: [id])
  title     String      @db.VarChar(255)
  content   String?
  image_url String?     @db.VarChar(255)
  published Boolean     @default(false)
  Photo     Photo[]
  Tags      Tag_Posts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Photo {
  id      Int    @id @default(autoincrement())
  post_id Int
  post    Post   @relation(fields: [post_id], references: [id])
  title   String
  url     String @unique
}

model Tag {
  id    Int         @id @default(autoincrement())
  name  String
  posts Tag_Posts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag_Posts {
  post_id Int
  post    Post @relation(fields: [post_id], references: [id])
  tag_id  Int
  tag     Tag  @relation(fields: [tag_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([post_id, tag_id])
}
